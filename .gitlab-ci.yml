image: docker:23.0.1
services:
  - docker:23.0.1-dind

stages:
  - build

variables:
  LATEST_VERSION: 15-3.5

before_script:
  - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

.build:
  script:
    - |
      BUILDER_NAME=builder-$CI_RUNNER_ID
      if ! docker buildx ls | grep $BUILDER_NAME; then
        docker buildx create --name $BUILDER_NAME --use
      fi
    - |
      if [ "$VERSION" = "$LATEST_VERSION" ]; then
        TAG_LATEST="--tag $CI_REGISTRY_IMAGE:latest${ALPINE:+-alpine}"
      fi
    - docker buildx build --builder $BUILDER_NAME --pull --push --platform linux/amd64,linux/arm64/v8 --tag "$CI_REGISTRY_IMAGE:$VERSION${ALPINE:+-alpine}" $TAG_LATEST $VERSION${ALPINE:+/alpine}
  rules:
    - if: $CI_COMMIT_REF_NAME == "main"
      changes:
        - $VERSION${ALPINE:+/alpine}/Dockerfile
      when: on_success

postgres:11-3.5:
  stage: build
  extends: .build
  variables:
    VERSION: 11-3.5

postgres:11-3.5-alpine:
  stage: build
  extends: .build
  variables:
    VERSION: 11-3.5
    ALPINE: "true"

postgres:12-3.5:
  stage: build
  extends: .build
  variables:
    VERSION: 12-3.5

postgres:12-3.5-alpine:
  stage: build
  extends: .build
  variables:
    VERSION: 12-3.5
    ALPINE: "true"

postgres:13-3.5:
  stage: build
  extends: .build
  variables:
    VERSION: 13-3.5

postgres:13-3.5-alpine:
  stage: build
  extends: .build
  variables:
    VERSION: 13-3.5
    ALPINE: "true"

postgres:14-3.5:
  stage: build
  extends: .build
  variables:
    VERSION: 14-3.5

postgres:14-3.5-alpine:
  stage: build
  extends: .build
  variables:
    VERSION: 14-3.5
    ALPINE: "true"

postgres:15-3.5:
  stage: build
  extends: .build
  variables:
    VERSION: 15-3.5

postgres:15-3.5-alpine:
  stage: build
  extends: .build
  variables:
    VERSION: 15-3.5
    ALPINE: "true"
